// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlatformApi.Helper.Data;

#nullable disable

namespace PlatformApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240530151003_Correction prix de type decimal")]
    partial class Correctionprixdetypedecimal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlatformApi.Models.Admin", b =>
                {
                    b.Property<int>("id_admin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_admin"), 1L, 1);

                    b.Property<DateTime>("date_naissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("email_admin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_admin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("num_telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom_admin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_admin");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("PlatformApi.Models.NewsLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SubscriptionStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("newsLetters");
                });

            modelBuilder.Entity("PlatformApi.Models.Paiement", b =>
                {
                    b.Property<int>("id_paiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_paiement"), 1L, 1);

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanPaiementId")
                        .HasColumnType("int");

                    b.Property<int>("VendeurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("datepaiement")
                        .HasColumnType("datetime2");

                    b.HasKey("id_paiement");

                    b.HasIndex("PlanPaiementId");

                    b.HasIndex("VendeurId");

                    b.ToTable("paiements");
                });

            modelBuilder.Entity("PlatformApi.Models.PlanPaiement", b =>
                {
                    b.Property<int>("id_PlanPaiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_PlanPaiement"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("libelle_PlanPaimenet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id_PlanPaiement");

                    b.ToTable("PlanPaiement");
                });

            modelBuilder.Entity("PlatformApi.Models.Store", b =>
                {
                    b.Property<int>("id_store")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_store"), 1L, 1);

                    b.Property<int>("VendeurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_store")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlstore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_store");

                    b.HasIndex("VendeurId");

                    b.ToTable("stores");
                });

            modelBuilder.Entity("PlatformApi.Models.Vendeur", b =>
                {
                    b.Property<int>("id_Vendeur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Vendeur"), 1L, 1);

                    b.Property<bool>("block")
                        .HasColumnType("bit");

                    b.Property<DateTime>("date_naissance")
                        .HasColumnType("date");

                    b.Property<string>("email_Vendeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_Venduer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_telephone")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom_Vendeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("verifie_compte")
                        .HasColumnType("bit");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Vendeur");

                    b.ToTable("vendeurs");
                });

            modelBuilder.Entity("PlatformApi.Models.VendeurAdmin", b =>
                {
                    b.Property<int>("VendeurId")
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendeurId", "AdminId", "ModifiedAt");

                    b.HasIndex("AdminId");

                    b.ToTable("VendeurAdmin");
                });

            modelBuilder.Entity("PlatformApi.Models.Paiement", b =>
                {
                    b.HasOne("PlatformApi.Models.PlanPaiement", "PlanPaiement")
                        .WithMany("Paiements")
                        .HasForeignKey("PlanPaiementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlatformApi.Models.Vendeur", "vendeur")
                        .WithMany("Paiements")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanPaiement");

                    b.Navigation("vendeur");
                });

            modelBuilder.Entity("PlatformApi.Models.Store", b =>
                {
                    b.HasOne("PlatformApi.Models.Vendeur", "Vendeur")
                        .WithMany("stores")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendeur");
                });

            modelBuilder.Entity("PlatformApi.Models.VendeurAdmin", b =>
                {
                    b.HasOne("PlatformApi.Models.Admin", "admin")
                        .WithMany("VendeurAdmins")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlatformApi.Models.Vendeur", "vendeur")
                        .WithMany("VendeurAdmins")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("admin");

                    b.Navigation("vendeur");
                });

            modelBuilder.Entity("PlatformApi.Models.Admin", b =>
                {
                    b.Navigation("VendeurAdmins");
                });

            modelBuilder.Entity("PlatformApi.Models.PlanPaiement", b =>
                {
                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("PlatformApi.Models.Vendeur", b =>
                {
                    b.Navigation("Paiements");

                    b.Navigation("VendeurAdmins");

                    b.Navigation("stores");
                });
#pragma warning restore 612, 618
        }
    }
}
